name: CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [1.4.0]
        julia-arch: [x86]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1.0.0

      - name: Setup julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}

      - name: Install binary dependencies
        run: sudo apt-get install xvfb

      - name: Install package dependencies
        run: julia --project=. -e 'using Pkg; Pkg.pkg"add AbstractPlotting#master MakieGallery#master; resolve; instantiate"'

      - name: Run tests
        run: export DISPLAY=':99.0'; xvfb-run --server-args='-screen 0 1024x768x24'  julia --project=. -e "using Pkg; Pkg.test()"

      - name: Upload recorded images
        uses: actions/upload-artifact@v1
        with:
          name: Recorded media
          path: ./test/test_recordings
        if: always()

      - name: Upload failing images
        uses: actions/upload-artifact@v1
        with:
          name: Failed images
          path: ./test/tested_different
        if: always()
        
      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
        if: always()
